DROP TABLE IF EXISTS FILM_GENRES CASCADE;
DROP TABLE IF EXISTS FILM_LIKES CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS FRIENDSHIPS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS MPA_RATINGS CASCADE;




-- PUBLIC.FILM_GENRES definition
-- Drop table
-- DROP TABLE PUBLIC.FILM_GENRES;
CREATE TABLE PUBLIC.FILM_GENRES (
                                    FILM_ID BIGINT NOT NULL,
                                    GENRE_ID INTEGER NOT NULL,
                                    CONSTRAINT FILM_GENRES_FK PRIMARY KEY (FILM_ID,FILM_ID),
                                    CONSTRAINT FILM_GENRES_FK_1 PRIMARY KEY (GENRE_ID,GENRE_ID)
);
CREATE INDEX FILM_GENRES_FK_1_INDEX_C ON PUBLIC.FILM_GENRES (GENRE_ID);
CREATE INDEX FILM_GENRES_FK_INDEX_C ON PUBLIC.FILM_GENRES (FILM_ID);
-- PUBLIC.FILM_GENRES foreign keys
ALTER TABLE PUBLIC.FILM_GENRES ADD CONSTRAINT FILM_GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FILM_GENRES ADD CONSTRAINT FILM_GENRES_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;




-- PUBLIC.FILM_LIKES definition
-- Drop table
-- DROP TABLE PUBLIC.FILM_LIKES;
CREATE TABLE PUBLIC.FILM_LIKES (
                                   FILM_ID BIGINT NOT NULL,
                                   USER_ID BIGINT NOT NULL,
                                   CONSTRAINT FILM_LIKES_FK PRIMARY KEY (FILM_ID,FILM_ID),
                                   CONSTRAINT FILM_LIKES_FK_1 PRIMARY KEY (USER_ID,USER_ID),
                                   CONSTRAINT FILM_LIKES_PK PRIMARY KEY (USER_ID)
);
CREATE INDEX FILM_LIKES_FK_INDEX_7 ON PUBLIC.FILM_LIKES (FILM_ID);
CREATE UNIQUE INDEX PRIMARY_KEY_7A ON PUBLIC.FILM_LIKES (USER_ID);
-- PUBLIC.FILM_LIKES foreign keys
ALTER TABLE PUBLIC.FILM_LIKES ADD CONSTRAINT FILM_LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FILM_LIKES ADD CONSTRAINT FILM_LIKES_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;




-- PUBLIC.FILMS definition
-- Drop table
-- DROP TABLE PUBLIC.FILMS;
CREATE TABLE PUBLIC.FILMS (
                              FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
                              NAME CHARACTER VARYING(255) NOT NULL,
                              DESCRIPTION CHARACTER VARYING(255),
                              RELEASE_DATE DATE NOT NULL,
                              DURATION_IN_MINUTES INTEGER NOT NULL,
                              MPA_RATING_ID INTEGER NOT NULL,
                              CONSTRAINT FILMS_FK PRIMARY KEY (MPA_RATING_ID,MPA_RATING_ID),
                              CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID)
);
CREATE INDEX FILMS_FK_INDEX_3 ON PUBLIC.FILMS (MPA_RATING_ID);
CREATE UNIQUE INDEX PRIMARY_KEY_3 ON PUBLIC.FILMS (FILM_ID);
-- PUBLIC.FILMS foreign keys
ALTER TABLE PUBLIC.FILMS ADD CONSTRAINT FILMS_FK FOREIGN KEY (MPA_RATING_ID) REFERENCES PUBLIC.MPA_RATINGS(MPA_RATING_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;




-- PUBLIC.FRIENDSHIPS definition
-- Drop table
-- DROP TABLE PUBLIC.FRIENDSHIPS;
CREATE TABLE PUBLIC.FRIENDSHIPS (
                                    FROM_USER_ID BIGINT NOT NULL,
                                    TO_USER_ID BIGINT NOT NULL,
                                    ISMUTUAL BOOLEAN,
                                    CONSTRAINT FRIENDSHIPS_FK PRIMARY KEY (FROM_USER_ID),
                                    CONSTRAINT FRIENDSHIPS_FK_1 PRIMARY KEY (TO_USER_ID)
);
CREATE INDEX FRIENDSHIPS_FK_1_INDEX_D ON PUBLIC.FRIENDSHIPS (TO_USER_ID);
CREATE INDEX FRIENDSHIPS_FK_INDEX_D ON PUBLIC.FRIENDSHIPS (FROM_USER_ID);
-- PUBLIC.FRIENDSHIPS foreign keys
ALTER TABLE PUBLIC.FRIENDSHIPS ADD CONSTRAINT FRIENDSHIPS_FK FOREIGN KEY (FROM_USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FRIENDSHIPS ADD CONSTRAINT FRIENDSHIPS_FK_1 FOREIGN KEY (TO_USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;




-- PUBLIC.GENRES definition
-- Drop table
-- DROP TABLE PUBLIC.GENRES;
CREATE TABLE PUBLIC.GENRES (
                               GENRE_ID INTEGER NOT NULL,
                               NAME CHARACTER VARYING NOT NULL,
                               CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_7 ON PUBLIC.GENRES (GENRE_ID);




-- PUBLIC.MPA_RATINGS definition
-- Drop table
-- DROP TABLE PUBLIC.MPA_RATINGS;
CREATE TABLE PUBLIC.MPA_RATINGS (
                                    MPA_RATING_ID INTEGER NOT NULL,
                                    NAME CHARACTER VARYING NOT NULL,
                                    CONSTRAINT MPA_RATINGS_PK PRIMARY KEY (MPA_RATING_ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_B ON PUBLIC.MPA_RATINGS (MPA_RATING_ID);




-- PUBLIC.USERS definition
-- Drop table
-- DROP TABLE PUBLIC.USERS;
CREATE TABLE PUBLIC.USERS (
                              USER_ID BIGINT NOT NULL,
                              EMAIL CHARACTER VARYING NOT NULL,
                              LOGIN CHARACTER VARYING NOT NULL,
                              BIRTHDAY DATE NOT NULL,
                              CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_4 ON PUBLIC.USERS (USER_ID);